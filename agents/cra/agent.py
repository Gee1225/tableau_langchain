import os

from langchain_openai import ChatOpenAI

from langgraph.prebuilt import create_react_agent


from agents.cra.state import CustomState
from agents.cra.tooling import tools

from agents.utils.agent_utils import  _visualize_graph


def initialize_agent(memory_store):
    """
    TABLEAU CRA AGENT

    This Agent uses the Langgraph prebuilt `create_react_agent` to can handle conversations on Tableau subjects such as:
        - Metrics (canonical source of truth for metrics, includes machine learning insights generated by Tableau Pulse)
        - Workbooks (contains analytics such as dashboards and charts that server as canonical interfaces for data exploration)
        - Data Sources (describes sources of data available for querying and exploration)
        - VizQL Data Service (can query a data source for on-demand data sets including aggregations, filters and calculations)
        - Web Search (can incorporate external knowledge from the web)

    Intended the most straightforward implementation of Tableau tooling for Langgraph.
    """

    # configure running model for the agent
    llm = ChatOpenAI(
        model=os.environ["AGENT_MODEL"],
        api_key=os.environ["OPENAI_API_KEY"],
        temperature=0,
        verbose=True,
        max_tokens=None,
        timeout=None,
        max_retries=2,
        # allow_dangerous_code=True,
    )

    if os.getenv('DEBUG') == '1':
        debugging = True
    else:
        debugging = False

    # Define the agent graph
    cra_agent = create_react_agent(
        model=llm,
        state_schema=CustomState,
        tools=tools,
        store=memory_store,
        debug=debugging
    )

    # outputs a mermaid diagram of the graph in png format
    _visualize_graph(cra_agent)

    return cra_agent
