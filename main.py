from dotenv import load_dotenv

from community.agents.tableau.chatbot.agent import initialize_agent
from community.agents.tableau.utils import _set_env, stream_graph_updates


def main():
    """
    TABLEAU AGENT STAGING PLATFORM

    Stage individual LangGraph Agents and Tableau AI tools to test functionality such as:
        - Metrics (canonical source of truth for metrics, includes machine learning insights generated by Tableau Pulse)
        - Workbooks (contains analytics such as dashboards and charts that server as canonical interfaces for data exploration)
        - Data Sources (describes sources of data available for querying and exploration)
        - Headless BI (can query a data source for on-demand data sets including aggregations, filters and calculations)
        - Web Search (can incorporate external knowledge from the web)

    Execute behavior within different agentic architectures
    """
    # environment variables available to current process and sub processes
    load_dotenv()

    # checks for values in .env, else prompts user before initializing
    _set_env('OPENAI_API_KEY')
    _set_env('TABLEAU_DOMAIN')
    _set_env('SITE_NAME')
    _set_env('DATA_SOURCE')
    _set_env('TAVILY_API_KEY')
    _set_env('PINECONE_API_KEY')
    _set_env('PINECONE_ENVIRONMENT')
    _set_env('PINECONE_INDEX_NAME')
    _set_env('RETRIEVER_MODEL')


    agent = initialize_agent()

    # User input loop
    while True:
        try:
            user_input = input("User: ")
            if user_input.lower() in ["quit", "exit", "q", "stop"]:
                print("Exiting Tableau Headless BI Agent...")
                print("Goodbye!")
                break

            stream_graph_updates(user_input, agent)
        except:
            # fallback if input() is not available
            user_input = "average discount, total sales, profits by region"
            print("Default user input: " + user_input)
            stream_graph_updates(user_input, agent)
            break

if __name__ == "__main__":
    main()
